install.packages('pcalg')
a = 1
remove(a)
install.packages("CircStats")
install.packages("NPCirc")
library(NPCirc)
data("periwinkles")
View(periwinkles)
View(periwinkles)
periwinkles = periwinkles * 2 * pi / 360
View(periwinkles)
View(periwinkles)
write.csv(file="periwinkles", row.names = FALSE)
write.csv(periwinkles, file="periwinkles", row.names = FALSE)
install.packages('rstan', dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
library(rstan)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , 'return ScalarReal( INTEGER(x)[0] * REAL(y)[0]) ; ' )
install.packages("rstan", type="source")
install.packages("rstan", type = "source")
install.packages('rstan', dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;' )
library(rstan)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
library(rstan)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
remove.packages(rstan)
remove.packages("rstan")
install.packages("rstan")
install.packages("rstan")
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
source("hmc-r.r")
setwd('~/Documents/stipple/cases')
getwd()
setwd('./stipple/cases')
setwd('~/Documents/stipple/cases')
setwd('C:\Users\akwn2\Documents\stipple\cases')
setwd('C:/Users/akwn2/Documents/stipple/cases')
f(c(0.1, 0.2, 0.3))
f
energy
d_w1 <- - (w1 - mu_w1) / s2_w1
setwd('C:/Users/akwn2/Documents/stipple/cases')
source("hmc-r.r")
# True parameters
N <- 10
w1 <- 30.
w2 <- 20.
s2 <- 5.
# Generating inputs and outputs
xin <- seq(pi / 2., 3. * pi / 2., N)
noise <- s2 * rnorm(N)
yout <- w1 * xin + w2 * sin(xin) + noise
# Modelling function
energy <- function(var, x, y){
w1 = var[0]
w2 = var[1]
s2 = var[3]
mu_w1 = 15.
s2_w1 = 100.
mu_w2 = 42.
s2_w2 = 100.
a = 0.001
b = 0.001
# Hyper-priors, non-informative
pri1 <- - 0.5 * log(2 * pi * s2_w1) - 0.5 * (w1 - mu_w1) ^ 2 / s2_w1
pri2 <- - 0.5 * log(2 * pi * s2_w2) - 0.5 * (w2 - mu_w2) ^ 2 / s2_w2
pri3 <- a * log(b) - (a + 1.) * log(s2) - b / s2 - lgamma(a)
# Likelihood term
like <- 0.
for (ii in 1:N){
y_mu <- w1 * xin[ii] + w2 * sin(xin[ii])
like <- like - 0.5 * log(2 * pi * s2) - 0.5 * (y[ii] - y_mu) ^ 2 / s2
}
# Log joint
return(like + pri1 + pri2 + pri3)
}
grad_energy <- function(var, x, y){
w1 = var[0]
w2 = var[1]
s2 = var[3]
mu_w1 = 15.
s2_w1 = 100.
mu_w2 = 42.
s2_w2 = 100.
a = 0.001
b = 0.001
# Hyper-priors, non-informative
d_w1 <- - (w1 - mu_w1) / s2_w1
d_w2 <- - (w2 - mu_w2) / s2_w2
d_s2 <- (a + 1.) / s2 + b / (s2 ** 2)
# Likelihood term
like <- 0.
for (ii in 1:N){
y_mu <- w1 * xin[ii] + w2 * sin(xin[ii])
d_w1 <- d_w1 - (y[ii] - y_mu) / s2 * xin[ii]
d_w2 <- d_w2 - (y[ii] - y_mu) / s2 * sin(xin[ii])
d_s2 <- d_s2 - 0.5 * log(2 * pi) / s2 + 0.5 * (y[ii] - y_mu) ^ 2 / (s2 ^ 2)
}
# Log joint
return(c(d_w1, d_w2, d_s2))
}
f = function(x) energy(x, xin, yout)
g = function(x) grad_energy(x, xin, yout)
f(c(0.1, 0.2, 0.3))
energy <- function(var, x, y){
source('~/stipple/cases/benchmark-R.r')
a
1
)
source('~/stipple/cases/benchmark-R.r')
f(c(0.1, 0.3))
energy(c(0.1, 0.3), xin, yout)
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
energy(c(0.1, 0.2), xin, yout)
energy(c(0.1, 0.2), xin, yout)
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
- 0.5 * log(2 * pi * s2_w1) - 0.5 * (var[0] - mu_w1) ^ 2 / s2_w1
- 0.5 * log(2 * pi * s2_w1) - 0.5 * (0.1 - mu_w1) ^ 2 / s2_w1
- 0.5 * log(2 * pi * s2_w2) - 0.5 * (var[1] - mu_w2) ^ 2 / s2_w2
- 0.5 * log(2 * pi * s2_w2) - 0.5 * (0.2 - mu_w2) ^ 2 / s2_w2
- 0.5 * log(2 * pi * s2_w2) - 0.5 * (0.2 - mu_w2) ^ 2 / s2_w2
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
energy(c(0.1, 0.2), xin, yout)
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
energy(c(0.1, 0.2), xin, yout)
source('~/stipple/cases/benchmark-R.r')
energy(c(0.1, 0.2), xin, yout)
var = seq(0.1, 0.2)
var
var = seq(0.1, 0.3)
var
var = seq(0.1, 0.2, length=2)
var
energy(var, xin, yout)
energy(var, xin, yout)
- 0.5 * log(2 * pi * s2_w1) - 0.5 * (var[0] - mu_w1) ^ 2 / s2_w1
s2_w1
(var[0] - mu_w1) ^ 2
var[0]
var(0)
var
var[1]
debugSource('~/stipple/cases/benchmark-R.r')
energy(var, xin, yout)
}
s2_w1 = 100.
source('~/stipple/cases/benchmark-R.r')
f(c(0.1, 0.2))
g(c(0.1, 0.2))
source('~/stipple/cases/benchmark-R.r')
g(c(0.1, 0.2))
proc.time
proc.time()
source('~/stipple/cases/benchmark-R.r')
