install.packages('pcalg')
a = 1
remove(a)
install.packages("CircStats")
install.packages("NPCirc")
library(NPCirc)
data("periwinkles")
View(periwinkles)
View(periwinkles)
periwinkles = periwinkles * 2 * pi / 360
View(periwinkles)
View(periwinkles)
write.csv(file="periwinkles", row.names = FALSE)
write.csv(periwinkles, file="periwinkles", row.names = FALSE)
install.packages('rstan', dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
library(rstan)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , 'return ScalarReal( INTEGER(x)[0] * REAL(y)[0]) ; ' )
install.packages("rstan", type="source")
install.packages("rstan", type = "source")
install.packages('rstan', dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;' )
library(rstan)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
library(rstan)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
remove.packages(rstan)
remove.packages("rstan")
install.packages("rstan")
install.packages("rstan")
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
step_size = 0.0001     # size of leapfrog steps
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
source('~/stipple/cases/benchmark-R.r')
while (n_samples < total_samples && rejections < max_rejections){
source('~/stipple/cases/benchmark-R.r')
)
source('~/stipple/cases/benchmark-R.r')
elapsed_time
samples <- c(samples, x)
source('~/stipple/cases/benchmark-R.r')
elapsed_time
source('~/stipple/cases/benchModel2R.r')
source('~/stipple/cases/benchModel2R.r')
source('~/stipple/cases/benchModel2R.r')
source('~/stipple/cases/benchModel2R.r')
source('~/stipple/cases/benchModel2R.r')
debugSource('~/stipple/cases/benchModel2R.r')
source('~/stipple/cases/benchModel2R.r')
elapsed_time
source('~/stipple/cases/benchModel1R.r')
return (like + pri1 + pri2 + pri3)
source('~/stipple/cases/benchModel1R.r')
